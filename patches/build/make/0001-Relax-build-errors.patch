From d58c55111a5fb6e54eba0c1b1c8bd895eec72c31 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Sat, 9 Sep 2017 15:15:28 +0300
Subject: [PATCH 01/30] Relax build errors

Change-Id: Iaba5d9386b185b6ec8509c4e7dc08e0ed331f6e9
---
 core/Makefile        | 2 +-
 core/binary.mk       | 2 +-
 core/combo/select.mk | 4 ++++
 core/main.mk         | 4 ++--
 envsetup.sh          | 1 +
 5 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/core/Makefile b/core/Makefile
index 895c3cf..97eb2c1 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -22,7 +22,7 @@ endif
 # src:dest pair is the first one to match the same dest"
 #$(1): the src:dest pair
 define check-product-copy-files
-$(if $(filter %.apk, $(call word-colon, 2, $(1))),$(error \
+$(if $(filter %.apk, $(call word-colon, 2, $(1))),$(warning \
     Prebuilt apk found in PRODUCT_COPY_FILES: $(1), use BUILD_PREBUILT instead!))
 endef
 # filter out the duplicate <source file>:<dest file> pairs.
diff --git a/core/binary.mk b/core/binary.mk
index deaede3..1f6ee92 100644
--- a/core/binary.mk
+++ b/core/binary.mk
@@ -378,7 +378,7 @@ endif
 # in the exception project list.
 ifeq ($(my_clang),false)
     ifeq ($(call find_in_local_clang_exception_projects,$(LOCAL_MODULE_MAKEFILE))$(LOCAL_IS_AUX_MODULE),)
-        $(error $(LOCAL_MODULE_MAKEFILE): $(LOCAL_MODULE): LOCAL_CLANG is set to false)
+        $(warning $(LOCAL_MODULE_MAKEFILE): $(LOCAL_MODULE): LOCAL_CLANG is set to false)
     endif
 endif
 
diff --git a/core/combo/select.mk b/core/combo/select.mk
index 5e181b9..8de1582 100644
--- a/core/combo/select.mk
+++ b/core/combo/select.mk
@@ -31,6 +31,10 @@ combo_var_prefix := $(combo_2nd_arch_prefix)$(combo_target)
 $(combo_var_prefix)GLOBAL_ARFLAGS := crsPD
 
 $(combo_var_prefix)STATIC_LIB_SUFFIX := .a
+$(combo_var_prefix)GLOBAL_CFLAGS := -fno-exceptions -Wno-multichar $(BOARD_GLOBAL_CFLAGS)
+$(combo_var_prefix)RELEASE_CFLAGS := -O2 -g -fno-strict-aliasing $(BOARD_RELEASE_CFLAGS)
+$(combo_var_prefix)GLOBAL_CPPFLAGS := $(BOARD_GLOBAL_CPPFLAGS)
+
 
 # Now include the combo for this specific target.
 include $(BUILD_COMBOS)/$(combo_target)$(combo_os_arch).mk
diff --git a/core/main.mk b/core/main.mk
index f51070b..258e533 100644
--- a/core/main.mk
+++ b/core/main.mk
@@ -242,14 +242,14 @@ endif
 # -----------------------------------------------------------------
 # Validate ADDITIONAL_DEFAULT_PROPERTIES.
 ifneq ($(ADDITIONAL_DEFAULT_PROPERTIES),)
-$(error ADDITIONAL_DEFAULT_PROPERTIES must not be set before here: $(ADDITIONAL_DEFAULT_PROPERTIES))
+#$(error ADDITIONAL_DEFAULT_PROPERTIES must not be set before here: $(ADDITIONAL_DEFAULT_PROPERTIES))
 endif
 
 #
 # -----------------------------------------------------------------
 # Validate ADDITIONAL_BUILD_PROPERTIES.
 ifneq ($(ADDITIONAL_BUILD_PROPERTIES),)
-$(error ADDITIONAL_BUILD_PROPERTIES must not be set before here: $(ADDITIONAL_BUILD_PROPERTIES))
+#$(error ADDITIONAL_BUILD_PROPERTIES must not be set before here: $(ADDITIONAL_BUILD_PROPERTIES))
 endif
 
 #
diff --git a/envsetup.sh b/envsetup.sh
index db4dac9..fd56b15 100644
--- a/envsetup.sh
+++ b/envsetup.sh
@@ -308,6 +308,7 @@ function set_stuff_for_environment()
     # With this environment variable new GCC can apply colors to warnings/errors
     export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
     export ASAN_OPTIONS=detect_leaks=0
+    export USE_NINJA=false
 }
 
 function set_sequence_number()
-- 
2.7.4

