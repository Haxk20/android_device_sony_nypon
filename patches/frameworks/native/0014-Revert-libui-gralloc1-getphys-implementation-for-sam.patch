From ac1d47c60d49758f1ffe0218313818481937760f Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Sun, 17 Sep 2017 01:55:28 +0300
Subject: [PATCH 14/27] Revert "libui: gralloc1 getphys implementation for
 samsung OMX"

This reverts commit d32a890d809f43a1138cff72b180f1aa3df87d5d.

Change-Id: I33472500c29f85293c31bf33201ee68dbcc49732
---
 include/ui/Gralloc1.h            |  8 --------
 include/ui/Gralloc1On0Adapter.h  | 14 +-------------
 include/ui/GraphicBufferMapper.h |  4 ----
 libs/ui/Gralloc1.cpp             | 13 -------------
 libs/ui/Gralloc1On0Adapter.cpp   | 25 -------------------------
 libs/ui/GraphicBufferMapper.cpp  | 12 ------------
 6 files changed, 1 insertion(+), 75 deletions(-)

diff --git a/include/ui/Gralloc1.h b/include/ui/Gralloc1.h
index 87e6775..90713b3 100644
--- a/include/ui/Gralloc1.h
+++ b/include/ui/Gralloc1.h
@@ -170,10 +170,6 @@ public:
             gralloc1_consumer_usage_t consumerUsage,
             const gralloc1_rect_t* accessRegion, struct android_ycbcr* outData,
             const sp<Fence>& acquireFence);
-#ifdef STE_HARDWARE
-    gralloc1_error_t getphys(buffer_handle_t buffer,
-            void **paddr);
-#endif
 
     gralloc1_error_t unlock(buffer_handle_t buffer, sp<Fence>* outFence);
 
@@ -269,10 +265,6 @@ private:
                 GRALLOC1_FUNCTION_LOCK_YCBCR> lockYCbCr;
         FunctionLoader<GRALLOC1_PFN_UNLOCK,
                 GRALLOC1_FUNCTION_UNLOCK> unlock;
-#ifdef STE_HARDWARE
-        FunctionLoader<GRALLOC1_PFN_GETPHYS,
-                GRALLOC1_FUNCTION_GETPHYS> getphys;
-#endif
 
         // Adapter-only functions
         FunctionLoader<GRALLOC1_PFN_RETAIN_GRAPHIC_BUFFER,
diff --git a/include/ui/Gralloc1On0Adapter.h b/include/ui/Gralloc1On0Adapter.h
index 2990288..6379a08 100644
--- a/include/ui/Gralloc1On0Adapter.h
+++ b/include/ui/Gralloc1On0Adapter.h
@@ -81,14 +81,6 @@ private:
     }
     std::string mCachedDump;
 
-#ifdef STE_HARDWARE
-    static int32_t getphysHook(gralloc1_device_t* device,
-            buffer_handle_t handle,
-            void **paddr) {
-        return getAdapter(device)->getphys(device, handle, paddr);
-    }
-#endif
-
     // Buffer descriptor lifecycle functions
 
     struct Descriptor;
@@ -340,11 +332,7 @@ private:
     static gralloc1_error_t allocateWithIdHook(gralloc1_device_t* device,
             gralloc1_buffer_descriptor_t descriptors,
             gralloc1_backing_store_t id, buffer_handle_t* outBuffer);
-#ifdef STE_HARDWARE
-    gralloc1_error_t getphys(gralloc1_device_t* device,
-            buffer_handle_t buffer,
-            void **paddr);
-#endif
+
     gralloc1_error_t retain(const std::shared_ptr<Buffer>& buffer);
     gralloc1_error_t release(const std::shared_ptr<Buffer>& buffer);
 
diff --git a/include/ui/GraphicBufferMapper.h b/include/ui/GraphicBufferMapper.h
index 9cd3601..d69f8fc 100644
--- a/include/ui/GraphicBufferMapper.h
+++ b/include/ui/GraphicBufferMapper.h
@@ -78,10 +78,6 @@ public:
 
     status_t unlockAsync(buffer_handle_t handle, int *fenceFd);
 
-#ifdef STE_HARDWARE
-    status_t getphys(buffer_handle_t handle, void** paddr);
-#endif
-
     const Gralloc2::Mapper& getGrallocMapper() const
     {
         return *mMapper;
diff --git a/libs/ui/Gralloc1.cpp b/libs/ui/Gralloc1.cpp
index 70cf69c..64a8b40 100644
--- a/libs/ui/Gralloc1.cpp
+++ b/libs/ui/Gralloc1.cpp
@@ -361,14 +361,6 @@ gralloc1_error_t Device::lockYCbCr(buffer_handle_t buffer,
             consumerUsage, accessRegion, outData, acquireFence);
 }
 
-#ifdef STE_HARDWARE
-gralloc1_error_t Device::getphys(buffer_handle_t buffer, void** paddr)
-{
-    int32_t intError = mFunctions.getphys(mDevice, buffer, paddr);
-    return static_cast<gralloc1_error_t>(intError);
-}
-#endif
-
 gralloc1_error_t Device::unlock(buffer_handle_t buffer, sp<Fence>* outFence)
 {
     int32_t fenceFd = -1;
@@ -456,11 +448,6 @@ bool Device::loadFunctions()
     if (!mFunctions.unlock.load(mDevice, true)) {
         return false;
     }
-#ifdef STE_HARDWARE
-    if (!mFunctions.getphys.load(mDevice, true)) {
-        return false;
-    }
-#endif
 
     if (hasCapability(GRALLOC1_CAPABILITY_ON_ADAPTER)) {
         // These should always be present on the adapter
diff --git a/libs/ui/Gralloc1On0Adapter.cpp b/libs/ui/Gralloc1On0Adapter.cpp
index a8b12f6..0fac7ef 100644
--- a/libs/ui/Gralloc1On0Adapter.cpp
+++ b/libs/ui/Gralloc1On0Adapter.cpp
@@ -173,10 +173,6 @@ gralloc1_function_pointer_t Gralloc1On0Adapter::doGetFunction(
                     &Gralloc1On0Adapter::lockYCbCr>);
         case GRALLOC1_FUNCTION_UNLOCK:
             return asFP<GRALLOC1_PFN_UNLOCK>(unlockHook);
-#ifdef STE_HARDWARE
-        case GRALLOC1_FUNCTION_GETPHYS:
-            return asFP<GRALLOC1_PFN_GETPHYS>(getphysHook);
-#endif
         case GRALLOC1_FUNCTION_INVALID:
             ALOGE("Invalid function descriptor");
             return nullptr;
@@ -310,27 +306,6 @@ gralloc1_error_t Gralloc1On0Adapter::allocateWithIdHook(
     return error;
 }
 
-#ifdef STE_HARDWARE
-gralloc1_error_t Gralloc1On0Adapter::getphys(
-        gralloc1_device_t* device,
-        buffer_handle_t handle,
-        void **paddr)
-{
-    gralloc1_error_t err;
-    auto adapter = getAdapter(device);
-    int res = mModule->getphys(mModule, handle, paddr);
-
-    if (res) {
-        ALOGE("getphys(%p) fail %d(%s)", handle, res, strerror(-res));
-        err = GRALLOC1_ERROR_UNDEFINED;
-    } else {
-        err = GRALLOC1_ERROR_NONE;
-    }
-
-    return err;
-}
-#endif
-
 gralloc1_error_t Gralloc1On0Adapter::retain(
         const std::shared_ptr<Buffer>& buffer)
 {
diff --git a/libs/ui/GraphicBufferMapper.cpp b/libs/ui/GraphicBufferMapper.cpp
index 05c3a24..87519bf 100644
--- a/libs/ui/GraphicBufferMapper.cpp
+++ b/libs/ui/GraphicBufferMapper.cpp
@@ -393,17 +393,5 @@ status_t GraphicBufferMapper::unlockAsync(buffer_handle_t handle, int *fenceFd)
     return error;
 }
 
-#ifdef STE_HARDWARE
-status_t GraphicBufferMapper::getphys(buffer_handle_t handle, void** paddr)
-{
-    status_t err;
-
-    err = mDevice->getphys(handle, paddr);
-
-    ALOGW_IF(err, "getphys(%p) fail %d(%s)", handle, err, strerror(-err));
-    return err;
-}
-#endif
-
 // ---------------------------------------------------------------------------
 }; // namespace android
-- 
2.7.4

