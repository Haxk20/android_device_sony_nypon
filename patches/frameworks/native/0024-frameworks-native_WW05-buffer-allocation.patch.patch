From 81b0e30c7912aeedfeb0d5e3bbdd081f307a6493 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Thu, 4 May 2017 10:26:21 +0300
Subject: [PATCH 24/27] frameworks-native_WW05-buffer-allocation.patch

Change-Id: I1394da4632f3cb8d9e4b3981e276e6603ace5c36
---
 libs/gui/BufferQueueProducer.cpp | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/libs/gui/BufferQueueProducer.cpp b/libs/gui/BufferQueueProducer.cpp
index 8385864..35b3524 100644
--- a/libs/gui/BufferQueueProducer.cpp
+++ b/libs/gui/BufferQueueProducer.cpp
@@ -483,14 +483,19 @@ status_t BufferQueueProducer::dequeueBuffer(int *outSlot,
 
         eglDisplay = mSlots[found].mEglDisplay;
         eglFence = mSlots[found].mEglFence;
+#ifdef INVALID_BUFFER_SLOT_OFF
+        *outFence = mSlots[found].mFence;
+#else
         // Don't return a fence in shared buffer mode, except for the first
         // frame.
         *outFence = (mCore->mSharedBufferMode &&
                 mCore->mSharedBufferSlot == found) ?
                 Fence::NO_FENCE : mSlots[found].mFence;
+#endif
         mSlots[found].mEglFence = EGL_NO_SYNC_KHR;
         mSlots[found].mFence = Fence::NO_FENCE;
 
+#ifndef INVALID_BUFFER_SLOT_OFF
         // If shared buffer mode has just been enabled, cache the slot of the
         // first buffer that is dequeued and mark it as the shared buffer.
         if (mCore->mSharedBufferMode && mCore->mSharedBufferSlot ==
@@ -498,6 +503,7 @@ status_t BufferQueueProducer::dequeueBuffer(int *outSlot,
             mCore->mSharedBufferSlot = found;
             mSlots[found].mBufferState.mShared = true;
         }
+#endif
     } // Autolock scope
 
     if (returnFlags & BUFFER_NEEDS_REALLOCATION) {
@@ -816,6 +822,7 @@ status_t BufferQueueProducer::queueBuffer(int slot,
             return BAD_VALUE;
         }
 
+#ifndef INVALID_BUFFER_SLOT_OFF
         // If shared buffer mode has just been enabled, cache the slot of the
         // first buffer that is queued and mark it as the shared buffer.
         if (mCore->mSharedBufferMode && mCore->mSharedBufferSlot ==
@@ -823,6 +830,7 @@ status_t BufferQueueProducer::queueBuffer(int slot,
             mCore->mSharedBufferSlot = slot;
             mSlots[slot].mBufferState.mShared = true;
         }
+#endif
 
         BQ_LOGV("queueBuffer: slot=%d/%" PRIu64 " time=%" PRIu64 " dataSpace=%d"
                 " crop=[%d,%d,%d,%d] transform=%#x scale=%s",
-- 
2.7.4

