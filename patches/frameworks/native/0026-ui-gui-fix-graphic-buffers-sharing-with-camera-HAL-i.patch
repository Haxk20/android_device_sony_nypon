From b5d3ffcbdf1122681d0d4fd045fbde293fb6588c Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 5 Dec 2016 01:20:09 +0700
Subject: [PATCH 26/27] ui, gui: fix graphic buffers sharing with camera HAL
 issue

thanks to SergeyL@4pda.ru for reworking my initial patch
enable with -DINVALID_BUFFER_SLOT_OFF

Change-Id: I94c28d47a8b41326221904f8d17aa0286fb374a1
---
 libs/gui/BufferQueueProducer.cpp | 5 ++---
 libs/ui/GraphicBuffer.cpp        | 3 +--
 2 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/libs/gui/BufferQueueProducer.cpp b/libs/gui/BufferQueueProducer.cpp
index 35b3524..33df07e 100644
--- a/libs/gui/BufferQueueProducer.cpp
+++ b/libs/gui/BufferQueueProducer.cpp
@@ -518,7 +518,6 @@ status_t BufferQueueProducer::dequeueBuffer(int *outSlot,
             Mutex::Autolock lock(mCore->mMutex);
 
             if (error == NO_ERROR && !mCore->mIsAbandoned) {
-                graphicBuffer->setGenerationNumber(mCore->mGenerationNumber);
                 mSlots[*outSlot].mGraphicBuffer = graphicBuffer;
             }
 
@@ -713,6 +712,8 @@ status_t BufferQueueProducer::attachBuffer(int* outSlot,
         return BAD_VALUE;
     }
 
+    mCore->waitWhileAllocatingLocked();
+
     if (buffer->getGenerationNumber() != mCore->mGenerationNumber) {
         BQ_LOGE("attachBuffer: generation number mismatch [buffer %u] "
                 "[queue %u]", buffer->getGenerationNumber(),
@@ -720,8 +721,6 @@ status_t BufferQueueProducer::attachBuffer(int* outSlot,
         return BAD_VALUE;
     }
 
-    mCore->waitWhileAllocatingLocked();
-
     status_t returnFlags = NO_ERROR;
     int found;
     status_t status = waitForFreeSlotThenRelock(FreeSlotCaller::Attach, &found);
diff --git a/libs/ui/GraphicBuffer.cpp b/libs/ui/GraphicBuffer.cpp
index 72d597c..bd68416 100644
--- a/libs/ui/GraphicBuffer.cpp
+++ b/libs/ui/GraphicBuffer.cpp
@@ -45,7 +45,7 @@ sp<GraphicBuffer> GraphicBuffer::from(ANativeWindowBuffer* anwb) {
 
 GraphicBuffer::GraphicBuffer()
     : BASE(), mOwner(ownData), mBufferMapper(GraphicBufferMapper::get()),
-      mInitCheck(NO_ERROR), mId(getUniqueId()), mGenerationNumber(0)
+      mInitCheck(NO_ERROR), mId(getUniqueId())
 {
     width  =
     height =
@@ -102,7 +102,6 @@ GraphicBuffer::GraphicBuffer(ANativeWindowBuffer* buffer, bool keepOwnership)
     : BASE(), mOwner(keepOwnership ? ownHandle : ownNone),
       mBufferMapper(GraphicBufferMapper::get()),
       mInitCheck(NO_ERROR), mId(getUniqueId()),
-      mGenerationNumber(0)
 {
     width  = buffer->width;
     height = buffer->height;
-- 
2.7.4

